name: SonarCloud Quality Gate Check

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        working-directory: ./employee-harness
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=knaresh88_demorepo-lint-ci

      # Install jq (check for errors)
      - name: Install jq
        uses: actions/setup-node@v3
        with:
          node-version: 16
        run: |
          npm install -g jq
          echo $?  # Print exit code to check for errors

      - name: Fetch SonarCloud Quality Gate status using API (replace with actual API endpoint and authentication)
        run: |
          curl -X GET https://sonarcloud.io/api/qualitygates/project_status?projectKey=knaresh88_demorepo-lint-ci \
            -H "Authorization: Bearer ${{ secrets.SONAR_TOKEN }}" \
            -s > quality_gate_status.json
          # Check for curl errors (add appropriate error handling)

      - name: Parse JSON and extract coverage (print intermediate values)
        run: |
          coverage=$(jq '.projectStatus.conditions[0].actualValue' quality_gate_status.json)
          echo "Coverage from JSON: $coverage"

      - name: Check coverage
        run: |
          if (( $(echo "$coverage < 75" | bc) )); then
            echo "Coverage is less than 75%, failing build"
            exit 1
          fi
